# GitHub Actions workflow to automatically update the Neovim submodule
# in the dotfiles repo when a change is detected in the nvim repo.

name: Update Nvim Submodule

on:
  repository_dispatch: 
    types: [update-submodules]  # Ensure this matches what you're sending

  workflow_dispatch:

jobs:
  update-submodule:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout dotfiles repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          submodules: true  # Ensure submodules are also pulled
          fetch-depth: 0  # Fetch full history for proper submodule updates

      - name: Set Git author identity
        run: |
          git config --global user.name "Your Name"
          git config --global user.email "you@example.com"

      - name: Add Neovim submodule
        run: |
          git submodule add https://github.com/etherbiswas/nvim.git .config/nvim || echo "Submodule already added"
          git submodule update --init --recursive

      - name: Get latest Neovim commit message
        id: commit_msg
        run: |
          cd .config/nvim
          latest_commit_msg=$(git log -1 --pretty=%B)
          echo "latest_commit_msg=$latest_commit_msg" >> $GITHUB_ENV

      - name: Commit and push updated nvim config
        run: |
          git add .config/nvim
          git commit -m "${{ env.latest_commit_msg }}" || echo "No changes to commit"
          git push origin hyprland  # Push to the Hyprland branch
